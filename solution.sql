-- EDA

SELECT * from category;
SELECT * from customers;
SELECT * from inventory;
SELECT * from order_items;
SELECT * from orders;
SELECT * from payments;
SELECT * from products;
SELECT * from sellers;
SELECT * from shippings;

-- ---------------------
-- Problem Statments
-- Advanced Analysis
-- ---------------------

/*
1. Top Selling Products
Query the top 10 products by total sales value.
Challenge: Include product name, total quantity sold, and total sales value.
*/


-- creating new column by ALTER TABLE cmd in order_items table to create total sales
ALTER TABLE order_items
ADD COLUMN total_sales FLOAT;


-- updating the column total_sales 
UPDATE order_items
SET total_sales = quantity * price_per_unit;
SELECT * FROM order_items;

SELECT * FROM order_items
ORDER by quantity DESC;

-- now joining tables
-- joining orders(o) --> order_items(oi) using order_id
-- joining product tables (p) --> order_items (oi) using product_id
SELECT * 
FROM orders AS o
JOIN 
order_items AS oi
ON oi.order_id = o.order_id
JOIN 
products AS p
ON p.product_id = oi.product_id

-- finding which product has most sales and listing top 10 products 
SELECT 
	oi.product_id, 
	p.product_name, 
	sum(oi.total_sales) AS total_sales,
	count(o.order_id) AS total_orders
FROM orders AS o
JOIN 
order_items AS oi
ON oi.order_id = o.order_id
JOIN 
products AS p
ON p.product_id = oi.product_id
GROUP BY 1,2
ORDER BY 3 DESC
LIMIT 10

/*
2. Revenue by Category
Calculate total revenue generated by each product category.
Challenge: Include the percentage contribution of each category to total revenue.
*/

-- category_id, category_name, total_revenue, total_contribution
-- oi -- p -- cateogry
-- group by cate-id and name


SELECT 
	p.category_id,
	c.category_name,
	SUM(oi.total_sales) AS total_sale,
	SUM(oi.total_sales)/(SELECT SUM(total_sales) FROM order_items)*100 AS percentage_contribution
FROM order_items AS oi
JOIN
products AS p
ON p.product_id = oi.product_id
LEFT JOIN category AS c
ON c.category_id = p.category_id
GROUP BY 1,2
ORDER BY 3 DESC;

 /*
3. Average Order Value (AOV)
Compute the average order value for each customer.
Challenge: Include only customers with more than 5 orders.
*/
-- o - oi - c
-- groupby customer_id, customer name, avg order val(sum(total sales)/)

SELECT 
	c.customer_id,
	concat(c.first_name,' ',c.last_name ) AS full_name, -- creating full_name from first and last name columnn values
	sum(total_sales)/count(o.order_id) AS AOV, -- creating AOV by 1. doing sum of total sales / each order_id 
	count(o.order_id) AS total_orders 
FROM orders AS o
JOIN customers AS c
ON c.customer_id = o.customer_id
JOIN order_items AS oi
ON oi.order_id = o.order_id
group by 1 --grouping them by customer_id gives 
having count(o.order_id) > 5 -- grouping with customer id who has ordered more than 5 orders


/*
4. Monthly Sales Trend
Query monthly total sales over the past year.
Challenge: Display the sales trend, grouping by month, return current_month sale, last month sale!
*/

SELECT 
	month,
	year,
	total_sales AS monthy_sales,
	LAG(total_sales,1) OVER(ORDER BY year, month) AS last_month_sales
FROM ---	
(
SELECT 
	EXTRACT(MONTH FROM o.order_date ) AS month,  -- extracting month and year from order date
	EXTRACT(year FROM o.order_date) AS year,
	round(SUM(oi.total_sales)::numeric, 2) AS total_sales --creating the total sales and rounding them to 2 decimels 
FROM orders AS o 
JOIN
order_items AS oi
ON oi.order_id = o.order_id
WHERE o.order_date > CURRENT_DATE - INTERVAL '1.5 year' 
GROUP BY 1,2
ORDER BY year,month ASC
) AS temp1 --using the above query as subquery and using that information to do lag fucntion to create previous month sales


/*
5. Customers with No Purchases
Find customers who have registered but never placed an order.
Challenge: List customer details and the time since their registration.
*/

SELECT *
FROM customers
WHERE customer_id not in (
					SELECT
						DISTINCT(customer_id)
					FROM orders);



/*
6. Least-Selling Categories by State
Identify the least-selling product category for each state.
Challenge: Include the total sales for that category within each state.
*
/

















